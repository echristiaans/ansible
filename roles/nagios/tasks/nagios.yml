---
- name: Nagios | install the latest version of nagios
  yum: name=nagios state=present
  become: yes

- name: Nagios | install the latest version of nagios-plugins
  yum: name=nagios-plugins-all state=present
  become: yes

- name: Nagios | install mod_ssl
  yum: name=mod_ssl state=present
  become: yes

- name: Nagios | install the latest version of nagios-plugins-nrpe
  yum: name=nagios-plugins-nrpe state=present
  become: yes

- name: Nagios | install the latest version of perl-Nagios-Plugin for check_vmware_api.pl
  yum: name=perl-Nagios-Plugin state=present
  become: yes

- name: Nagios | install the latest version of perl-CGI
  yum: name=perl-CGI state=present
  become: yes

- name: Nagios | install the latest version of perl-libwww-perl for check_vmware_api.pl
  yum: name=perl-libwww-perl state=present
  become: yes

- name: Nagios | install the latest version of perl-Net-SNMP for check_snmp_cisco_wlc
  yum: name=perl-Net-SNMP state=present
  become: yes

- name: Nagios | install the latest version of perl-LWP-Protocol-https for check_vmware
  yum: name=perl-LWP-Protocol-https state=present
  become: yes

- name: Nagios | check if perl vm sdk is installed
  stat: path=/usr/share/doc/vmware-viperl/EULA
  register: vm_sdk_installed
  become: yes

- name: Nagios | unpack perl vm sdk for check_vmware_api.pl
  unarchive: src=VMware-VIPerl-1.6.0-104313.x86_64.tar dest=/tmp
  when: not vm_sdk_installed.stat.exists
  become: yes

- name: Nagios | install perl vm sdk for check_vmware_api.pl
  shell: cd /tmp/vmware-viperl-distrib && yes | PAGER=cat ./vmware-install.pl default
  when: not vm_sdk_installed.stat.exists
  become: yes

- name: Nagios | install cpan for check_vmware_api.pl
  yum: name=cpan state=present
  become: yes

- name: Nagios | install perl-App-cpanminus for check_vmware_api.pl
  yum: name=perl-App-cpanminus state=present
  become: yes

- name: Nagios | install dependencies for check_vmware_api.pl
  yum: name=gcc state=present
  become: yes

- name: Nagios | initiate first time run cpan
  shell: (echo y;echo o conf prerequisites_policy follow;echo o conf commit)|cpan
  changed_when: False 
  become: yes

- name: Nagios | install dependencies (perl-XML-LibXML) for check_vmware_api.pl
  yum: name=perl-XML-LibXML state=present
  become: yes

- name: Nagios | install dependencies (libxml2-devel) for check_vmware_api.pl
  yum: name=libxml2-devel state=present
  become: yes

- name: Nagios | install dependencies (force XML::LibXML) for check_vmware_api.pl
  shell: perl -MCPAN -e "CPAN::Shell->force(qw(install XML::LibXML));"
  become: yes
  changed_when: False

- name: Nagios | install dependencies (Test::Pod) for check_vmware_api.pl
  cpanm: name=Test::Pod
  become: yes

- name: Nagios | install dependencies (Env) for check_vmware_api.pl
  cpanm: name=Env
  become: yes

- name: Nagios | install dependencies (Fatal) for check_vmware_api.pl
  cpanm: name=Fatal
  become: yes

- name: Nagios | install dependencies (Class::MethodMaker) for check_vmware_api.pl
  cpanm: name=Class::MethodMaker
  become: yes

- name: Nagios | install dependencies (perl-Time-Duration) for check_vpn.pl
  yum: name=perl-Time-Duration state=present
  become: yes

- name: Nagios | install dependencies (perl-JSON) for send-html-email
  yum: name=perl-JSON state=present
  become: yes

- name: Nagios | install dependencies (perl-XML-Simple) for send-sms
  yum: name=perl-XML-Simple state=present
  become: yes

- name: Nagios | install dependencies (perl-WWW-Curl) for send-sms
  yum: name=perl-WWW-Curl state=present
  become: yes

- name: Nagios | install dependencies (perl-DateTime) for send-sms
  yum: name=perl-DateTime state=present
  become: yes

- name: Nagios | enable nagios and start it
  service: name=nagios enabled=yes state=started
  become: yes

- name: Nagios | install passlib
  yum: name=python-passlib state=present
  become: yes

- name: Nagios | install mod_ldap apache
  yum: name=mod_ldap state=present
  become: yes

- name: Nagios | Create a VirtualHost file for each enabled VirtualHost
  template:
    src=nagios_vhost.conf.j2
    dest=/etc/httpd/conf.d/nagios.conf
    owner=root
    group=root
    mode=0644
  with_items: nagios_vhosts_enabled
  notify:
    - reload httpd
  become: yes

- name: Nagios | clearout blank lines in htpasswd
  shell: perl -ni -e 'print unless /^$/' /etc/nagios/passwd
  become: yes
  changed_when: False

- name: Nagios | create nagiosadmin htpasswd
  htpasswd: path=/etc/nagios/passwd name=nagiosadmin password={{ nagiosadmin_passwd }} owner=root mode=0644
  become: yes

- name: Nagios | make sure nagios can login
  user: name=nagios shell=/bin/bash append=yes
  become: yes

- name: SELinux | Creates directory selinux rules
  file: path=/etc/selinux/rules state=directory
  become: yes

- name: SELinux | selinux copy selinux file to /etc/selinux/rules/nagios_config_check.pp
  copy: src=nagios_config_check.pp dest=/etc/selinux/rules/nagios_config_check.pp
  become: yes

- name: SELinux | selinux (check service nagios config module)
  shell: /sbin/semodule -i /etc/selinux/rules/nagios_config_check.pp
  changed_when: False
  become: yes

- name: SELinux | selinux copy selinux file to /etc/selinux/rules/nagios_ldap.pp
  copy: src=nagios_ldap.pp dest=/etc/selinux/rules/nagios_ldap.pp
  become: yes

- name: SELinux | selinux (http/ nagios ldap authentication module)
  shell: /sbin/semodule -i /etc/selinux/rules/nagios_ldap.pp
  changed_when: False
  become: yes
