; {{ ansible_managed }}

; A list of available remote target systems
[/settings/targets]

; Configure which services has to be in which state
[/settings/system/windows/service mapping]

; Section for system checks and system settings
[/settings/system/windows]

; DEFAULT LENGTH - Used to define the default interval for range buffer checks (ie. CPU).
default buffer length = 1h

; Section for configuring the shared session.
[/settings/shared session]

; ENABLE THE SAHRED SESSION - This is currently not added in 0.4.x
enabled = false

; Section for the PythonScripts module.
[/settings/python]

; A list of scripts available to run from the LuaSCript module.
[/settings/lua/scripts]

; Section for the LUAScripts module.
[/settings/lua]

; A set of options to configure the real time checks
[/settings/logfile/real-time]

; REAL TIME CHECKING - Spawns a background thread which waits for file changes.
enabled = false

; Configure log file properties.
[/settings/log/file]

; MAXIMUM FILE SIZE - When file size reaches this it will be truncated to 50% if set to 0 (default) truncation will be disabled
max size = 0

; A list of scripts available to run from the PythonScript module.
[/settings/python/scripts]

; Configure log properties.
[/settings/log]

; LOG LEVEL - Log level to use. Available levels are error,warning,info,debug,trace
level = info

; DATEMASK - The size of the buffer to use when getting messages this affects the speed and maximum size of messages you can recieve.
date format = %Y-%m-%d %H:%M:%S

; FILENAME - The file to write log data to. Set this to none to disable log to file.
file name = ${exe-path}/nsclient.log

; Section for simple file writer module (SimpleFileWriter.dll).
[/settings/writers/file]

; CHANNEL - The channel to listen to.
channel = FILE

; FILE TO WRITE TO - The filename to write output to.
file = output.txt

; MESSAGE SYNTAX - The syntax of the message to write to the line. Can be any arbitrary string as well as include any of the following special keywords:${command} = The command name, ${host} the host, ${channel} the recieving channel, ${alias} the alias for the command, ${alias-or-command} = alias if set otherweise command, ${message} = the message data (no escape), ${result} = The result status (number).
syntax = ${alias-or-command} ${result} ${message}

; Section for graphite passive check module.
[/settings/graphite/client]

; CHANNEL - The channel to listen to.
channel = GRAPHITE

; HOSTNAME - The host name of this host if set to blank (default) the windows name of the computer will be used.
hostname = auto

; A list of wrapped scripts (ie. scruts using a template mechanism). The template used will be defined by the extension of the script.
[/settings/external scripts/wrapped scripts]
{% for value in dir_listing_checks.stdout_lines %}
{% set list1 = value.split('.') %}
{{ list1[0] }} = {{ value }} $ARG1$ $ARG2$ $ARG3$ $ARG4$ $ARG5$ $ARG6$ $ARG7$ $ARG8$ $ARG9$ $ARG10$ $ARG11$ $ARG12$ $ARG13$ $ARG14$ $ARG15$ $ARG16$ $ARG17$ $ARG18$ $ARG19$ $ARG20$
{% endfor %}

; A list of scripts available to run from the CheckExternalScripts module. Syntax is: <command>=<script> <arguments>
[/settings/external scripts/scripts]

; Target definition for: default
[/settings/syslog/client/targets/default]

; TODO - Target definition for: default
warning severity = warning

; TODO - Target definition for: default
ok severity = informational

; TODO - Target definition for: default
tag_syntax = NSCA

; TODO - Target definition for: default
facility = kernel

; TODO - Target definition for: default
severity = error

; TODO - Target definition for: default
unknown severity = emergency

; TODO - Target definition for: default
critical severity = critical

; TARGET ADDRESS - Target host address
address = 

; TODO - Target definition for: default
message_syntax = %message%

; Section for external scripts configuration options (CheckExternalScripts).
[/settings/external scripts]

; SCRIPT DIRECTORY - Load all scripts in a directory and use them as commands. Probably dangerous but useful if you have loads of scripts :)
script path = 

; COMMAND ALLOW NASTY META CHARS - This option determines whether or not the we will allow clients to specify nasty (as in |`&><'"\[]{}) characters in arguments.
allow nasty characters = true

; COMMAND ARGUMENT PROCESSING - This option determines whether or not the we will allow clients to specify arguments to commands that are executed.
allow arguments = true

; COMMAND TIMEOUT - The maximum time in seconds that a command can execute. (if more then this execution will be aborted). NOTICE this only affects external commands not internal ones.
timeout = {{ nsclient.command_timeout }}

; A set of filters to use in real-time mode
[/settings/eventlog/real-time/filters]

; A set of options to configure the real time checks
[/settings/eventlog/real-time]

; REAL TIME CHECKING - Spawns a background thread which detects issues and reports them back instantly.
enabled = false

; LOGS TO CHECK - Comma separated list of logs to check
log = application,system

; DEBUG - Log missed records (useful to detect issues with filters) not useful in production as it is a bit of a resource hog.
debug = false

; STARTUP AGE - The initial age to scan when starting NSClient++
startup age = 30m

; Section for SYSLOG passive check module.
[/settings/syslog/client]

; CHANNEL - The channel to listen to.
channel = syslog

; HOSTNAME - The host name of this host if set to blank (default) the windows name of the computer will be used.
hostname = 

; Section for the Scheduler module.
[/settings/scheduler/schedules]

; Section for configuring the crash handler.
[/settings/crash]

; SUBMISSION URL - The url to submit crash reports to
submit url = https://crash.nsclient.org/post

; RESTART SERVICE NAME - The url to submit crash reports to
restart target = NSCP

; RESTART - Submit crash reports to nsclient.org (or your configured submission server)
restart = true

; ARCHIVE CRASHREPORTS - Archive crash reports in the archive folder
archive = true

; SUBMIT CRASHREPORTS - Submit crash reports to nsclient.org (or your configured submission server)
submit = false

; CRASH ARCHIVE LOCATION - The folder to archive crash dumps in
archive folder = ${shared-path}/crash-dumps

; Section for check_mk (CheckMKServer.dll) protocol options.
[/settings/check_mk/server]

; PORT NUMBER - Port to use for check_mk.
port = 6556

; ENABLE SSL ENCRYPTION - This option controls if SSL should be enabled.
use ssl = false

; Section for NSCP active/passive check module.
[/settings/check_mk/client]

; CHANNEL - The channel to listen to.
channel = CheckMK

; Section for log file checker
[/settings/logfile]

; Target definition for: default
[/settings/check_mk/client/targets/default]

; VERIFY MODE - Target definition for: default
verify mode = none

; ALLOWED CIPHERS - A better value is: ALL:!ADH:!LOW:!EXP:!MD5:@STRENGTH
allowed ciphers = ADH

; TARGET ADDRESS - Target host address
address = 

; SSL CERTIFICATE - Target definition for: default
certificate = 

; TIMEOUT - Timeout when reading/writing packets to/from sockets.
timeout = 30

; ENABLE SSL ENCRYPTION - This option controls if SSL should be enabled.
use ssl = true

; Section for SMTP passive check module.
[/settings/SMTP/client]

; CHANNEL - The channel to listen to.
channel = SMTP

; Section for NSCA (NSCAServer) (check_nsca) protocol options.
[/settings/NSCA/server]

; PORT NUMBER - Port to use for NSCA.
port = 5667

; PERFORMANCE DATA - Send performance data back to nagios (set this to false to remove all performance data).
performance data = true

; ENCRYPTION - Name of encryption algorithm to use. Has to be the same as your agent i using or it wont work at all.This is also independent of SSL and generally used instead of SSL. Available encryption algorithms are: none = No Encryption (not safe) xor = XOR des = DES 3des = DES-EDE3 cast128 = CAST-128 xtea = XTEA blowfish = Blowfish twofish = Twofish rc2 = RC2 aes128 = AES aes192 = AES aes = AES serpent = Serpent gost = GOST
encryption = aes

; ENABLE SSL ENCRYPTION - This option controls if SSL should be enabled.
use ssl = false

; PAYLOAD LENGTH - Length of payload to/from the NSCA agent. This is a hard specific value so you have to "configure" (read recompile) your NSCA agent to use the same value for it to work.
payload length = 512

; Target definition for: default
[/settings/NSCA/client/targets/default]

; ENCRYPTION - Name of encryption algorithm to use. Has to be the same as your server i using or it wont work at all.This is also independent of SSL and generally used instead of SSL. Available encryption algorithms are: none = No Encryption (not safe) xor = XOR des = DES 3des = DES-EDE3 cast128 = CAST-128 xtea = XTEA blowfish = Blowfish twofish = Twofish rc2 = RC2 aes128 = AES aes192 = AES aes = AES serpent = Serpent gost = GOST
encryption = aes

; ENABLE SSL ENCRYPTION - This option controls if SSL should be enabled.
use ssl = false

; ALLOWED CIPHERS - A better value is: ALL:!ADH:!LOW:!EXP:!MD5:@STRENGTH
allowed ciphers = ADH

; VERIFY MODE - Target definition for: default
verify mode = none

; PASSWORD - The password to use. Again has to be the same as the server or it wont work at all.
password = 

; TARGET ADDRESS - Target host address
address = 

; SSL CERTIFICATE - Target definition for: default
certificate = 

; TIMEOUT - Timeout when reading/writing packets to/from sockets.
timeout = 30

; Section for NSClient (NSClientServer.dll) (check_nt) protocol options.
[/settings/NSClient/server]

; ENABLE SSL ENCRYPTION - This option controls if SSL should be enabled.
use ssl = false

; PORT NUMBER - Port to use for check_nt.
port = 12489

; PERFORMANCE DATA - Send performance data back to Nagios (set this to 0 to remove all performance data).
performance data = true

; A set of filters to use in real-time mode
[/settings/system/windows/real-time/checks]

; Section for NSCA passive check module.
[/settings/NSCA/client]

; CHANNEL - The channel to listen to.
channel = NSCA

; HOSTNAME - The host name of the monitored computer. Set this to auto (default) to use the windows name of the computer.  auto	Hostname ${host}	Hostname ${host_lc} Hostname in lowercase ${host_uc}	Hostname in uppercase ${domain}	Domainname ${domain_lc}	Domainname in lowercase ${domain_uc}	Domainname in uppercase 
hostname = auto

; Section for the EventLog Checker (CheckEventLog.dll).
[/settings/eventlog]

; LOOKUP NAMES - Lookup the names of eventlog files
lookup names = true

; BUFFER_SIZE - The size of the buffer to use when getting messages this affects the speed and maximum size of messages you can recieve.
buffer size = 131072

; DEBUG - Log more information when filtering (useful to detect issues with filters) not useful in production as it is a bit of a resource hog.
debug = false

; SYNTAX - Set this to use a specific syntax string for all commands (that don't specify one).
syntax = 

; Section for WEB active/passive check module.
[/settings/NRPE/client]

; CHANNEL - The channel to listen to.
channel = NRPE

; Target definition for: default
[/settings/NRDP/client/targets/default]

; RECIPIENT - Recipient of email message
recipient = nscp@localhost

; SENDER - Sender of email message
sender = nscp@localhost

; TARGET ADDRESS - Target host address
address = 

; TIMEOUT - Timeout when reading/writing packets to/from sockets.
timeout = 30

; TEMPLATE - Template for message data
template = Hello, this is %source% reporting %message%!

; Section for SMTP passive check module.
[/settings/NRDP/client]

; HOSTNAME - The host name of this host if set to blank (default) the windows name of the computer will be used.
hostname = auto

; CHANNEL - The channel to listen to.
channel = NRDP

; Section for NRPE (NRPEServer.dll) (check_nrpe) protocol options.
[/settings/NRPE/server]

; ENABLE SSL ENCRYPTION - This option controls if SSL should be enabled.
use ssl = true

; COMMAND ARGUMENT PROCESSING - This option determines whether or not the we will allow clients to specify arguments to commands that are executed.
allow arguments = true

; ALLOW INSECURE CHIPHERS and ENCRYPTION - Only enable this if you are using legacy check_nrpe client.
insecure = true

; COMMAND ALLOW NASTY META CHARS - This option determines whether or not the we will allow clients to specify nasty (as in |`&><'"\[]{}) characters in arguments.
allow nasty characters = true

; PORT NUMBER - Port to use for NRPE.
port = 5666

; EXTENDED RESPONSE - Send more then 1 return packet to allow response to go beyond payload size (requires modified client if legacy is true this defaults to false).
extended response = true

; Section for WEB (WEBServer.dll) (check_WEB) protocol options.
[/settings/WEB/server]

; CERTIFICATE - Ssl certificate to use for the ssl server
certificate = ${certificate-path}/certificate.pem

; PORT NUMBER - Port to use for WEB server.
port = 8443s

; Target definition for: default
[/settings/NRPE/client/targets/default]

; TARGET ADDRESS - Target host address
address = 

; Insecure legacy mode - Use insecure legacy mode to connect to old NRPE server
insecure = 

; ENABLE SSL ENCRYPTION - This option controls if SSL should be enabled.
use ssl = true

; TIMEOUT - Timeout when reading/writing packets to/from sockets.
timeout = 30

; VERIFY MODE - What to verify default is non, to validate remote certificate use remote-peer
verify mode = none

; PAYLOAD LENGTH - Length of payload to/from the NRPE agent. This is a hard specific value so you have to "configure" (read recompile) your NRPE agent to use the same value for it to work.
payload length = 1024

; SSL CERTIFICATE - The ssl certificate to use to encrypt the communication
certificate = 

; SSL CERTIFICATE KEY - Key for the SSL certificate
certificate key = 

; A list of modules.
[/modules]

; WEBClient - WEB client can be used both from command line and from queries to check remote systes via WEB(REST)
WEBClient = 0

; SyslogClient - Forward information as syslog messages to a syslog server
SyslogClient = 0

; SimpleFileWriter - Write status updates to a text file (A bit like the NSCA server does)
SimpleFileWriter = 0

; Scheduler - Use this to schedule check commands and jobs in conjunction with for instance passive monitoring through NSCA
Scheduler = 0

; PythonScript - Loads and processes internal Python scripts
PythonScript = 0

; NSClientServer - A server that listens for incoming check_nt connection and processes incoming requests.
NSClientServer = 0

; NSCAClient - NSCA client can be used both from command line and from queries to submit passive checks via NSCA
NSCAClient = 0

; NRPEServer - A server that listens for incoming NRPE connection and processes incoming requests.
NRPEServer = 1

; NRDPClient - NRDP client can be used both from command line and from queries to check remote systes via NRDP
NRDPClient = 0

; LUAScript - Loads and processes internal Lua scripts
LUAScript = 0

; SMTPClient - SMTP client can be used both from command line and from queries to check remote systes via SMTP
SMTPClient = 0

; DotnetPlugin - Plugin to load and manage plugins written in dot net.
DotnetPlugins = 0

; CheckTaskSched - Check status of your scheduled jobs.
CheckTaskSched = 0

; CheckMKServer - A server that listens for incoming check_mk connection and processes incoming requests.
CheckMKServer = 0

; CheckWMI - Check status via WMI
CheckWMI = 0

; CheckMKClient - check_mk client can be used both from command line and from queries to check remote systes via check_mk
CheckMKClient = 0

; CauseCrashes - *DO NOT USE* This module is usefull except for debugging purpouses and outright dangerous as it allows someone remotley to crash your client!
CauseCrashes = 0

; SamplePluginSimple - This is a sample plugin used to demonstrate how to make plugins
SamplePluginSimple = 0

; NRPEClient - NRPE client can be used both from command line and from queries to check remote systes via NRPE as well as configure the NRPE server
NRPEClient = 0

; WEBServer - A server that listens for incoming HTTP connection and processes incoming requests. It provides both a WEB UI as well as a REST API in addition to simplifying configuration of WEB Server module.
WEBServer = 0

; GraphiteClient - Graphite client can be used to submit graph data to a graphite graphing system
GraphiteClient = 0

; CheckHelpers - Various helper function to extend other checks.
CheckHelpers = 0

; CheckExternalScripts - Execute external scripts
CheckExternalScripts = 1

; CheckSystem - Various system related checks, such as CPU load, process state, service state memory usage and PDH counters.
CheckSystem = 1

; NSCAServer - A server that listens for incoming NSCA connection and processes incoming requests.
NSCAServer = 0

; CheckLogFile - File for checking log files and various other forms of updating text files
CheckLogFile = 0

; SimpleCache - Stores status updates and allows for active checks to retrieve them
SimpleCache = 0

; CheckEventLog - Check for errors and warnings in the event log.
CheckEventLog = 1

; CheckDisk - CheckDisk can check various file and disk related things.
CheckDisk = 1

; CheckNSCP - Use this module to check the healt and status of NSClient++ it self
CheckNSCP = 1

; CommandClient - A command line client, generally not used except with "nscp test".
CommandClient = 0

; A set of options to configure the real time checks
[/settings/system/windows/real-time]

; Target definition for: default
[/settings/SMTP/client/targets/default]

; TARGET - Target definition for: default
An alias is an internal command that has been predefined to provide a single command without arguments. Be careful so you don't create loops (ie check_loop = check_a, check_a=check_loop)

; TEMPLATE - Template for message data
template = Hello, this is %source% reporting %message%!

; SENDER - Sender of email message
sender = nscp@localhost

; RECIPIENT - Recipient of email message
recipient = nscp@localhost

; TARGET ADDRESS - Target host address
address = 

; TIMEOUT - Timeout when reading/writing packets to/from sockets.
timeout = 30

[/settings/external scripts/alias]

; Modules written in dotnet/CLR
[/modules/dotnet]

; Target definition for: default
[/settings/graphite/client/targets/default]

; PATH FOR VALUES - Path mapping for metrics
path = system.${hostname}.${check_alias}.${perf_alias}

; TARGET ADDRESS - Target host address
address = 

; Add counters to check
[/settings/system/windows/counters]

; Section for simple cache module (SimpleCache.dll).
[/settings/cache]

; PRIMARY CACHE INDEX - Set this to the value you want to use as unique key for the cache. Can be any arbitrary string as well as include any of the following special keywords:${command} = The command name, ${host} the host, ${channel} the recieving channel, ${alias} the alias for the command, ${alias-or-command} = alias if set otherweise command, ${message} = the message data (no escape), ${result} = The result status (number).
primary index = ${alias-or-command}

; CHANNEL - The channel to listen to.
channel = CACHE

; A set of filters to use in real-time mode
[/settings/logfile/real-time/checks]

; Section for the Scheduler module.
[/settings/scheduler]

; THREAD COUNT - Number of threads to use.
threads = 5

; A list of templates for wrapped scripts.
[/settings/external scripts/wrappings]

; WRAPPING - An external script wrapping
{% for value in nsclient.wrappings %}
{{ value }}
{% endfor %}

[/settings/external scripts/wrapped scripts]
{% for value in dir_listing_checks.stdout_lines %}
{% set list1 = value.split('.') %}
{{ list1[0] }} = {{ value }} $ARG1$ $ARG2$ $ARG3$ $ARG4$ $ARG5$ $ARG6$ $ARG7$ $ARG8$ $ARG9$ $ARG10$ $ARG11$ $ARG12$ $ARG13$ $ARG14$ $ARG15$ $ARG16$ $ARG17$ $ARG18$ $ARG19$ $ARG20$
{% endfor %}

[/settings/default]

; CACHE ALLOWED HOSTS - If host names (DNS entries) should be cached, improves speed and security somewhat but won't allow you to have dynamic IPs for your Nagios server.
cache allowed hosts = true

; ALLOWED HOSTS - A comaseparated list of allowed hosts. You can use netmasks (/ syntax) or * to create ranges.
allowed hosts = {{ nsclient.allowed_hosts }}

; TIMEOUT - Timeout when reading packets on incoming sockets. If the data has not arrived within this time we will bail out.
timeout = {{ nsclient.timeout }}

; BIND TO ADDRESS - Allows you to bind server to a specific local address. This has to be a dotted ip address not a host name. Leaving this blank will bind to all available IP addresses.
bind to = 

; PASSWORD - Password used to authenticate against server
password = 

; INBOX - The default channel to post incoming messages on
inbox = inbox


[/paths]

; Path for certificate-path - 
; certificate-path = ${shared-path}/security

; Path for crash-folder - 
; crash-folder = D:\source\build\x64\dist

; Path for base-path - 
; base-path = D:\source\build\x64\dist

; Path for module-path - 
; module-path = ${shared-path}/modules

; Path for shared-path - 
; shared-path = D:\source\build\x64\dist

; Path for exe-path - 
; exe-path = D:\source\build\x64\dist

; Files to be included in the configuration
[/includes]

