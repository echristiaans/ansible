---
#- name: Set up network and turn off zeroconf
#  template: src=templates/network.j2 dest=/etc/sysconfig/network owner=root group=root

#- name: Template network configuration file
#  template: src=templates/ifcfg.j2 dest=/etc/sysconfig/network-scripts/ifcfg-eth0 owner=root group=root

#- name: hostname | setting hostname
#  hostname: name=needtogetfromsis

- name: Add the OS specific varibles
  include_vars: "{{ ansible_os_family }}.yml"

- name: Install the required  packages in Redhat derivatives
  yum: name={{ item }} state=installed
  with_items: network_pkgs
  when: ansible_os_family == 'RedHat'
  become: yes

- name: Install the required packages in Debian derivatives
  apt: name={{ item }} state=installed update_cache=yes
  with_items: network_pkgs
  environment: env
  when: ansible_os_family == 'Debian'
  become: yes

- name: Make sure the include line is there in interfaces file
  lineinfile: >
     regexp="^source\ \/etc\/network\/interfaces.d\/\*"
     line="source /etc/network/interfaces.d/*"
     dest=/etc/network/interfaces
     state=present
     insertafter=EOF
  when: ansible_os_family == "Debian"
  become: yes

- name: Create the directory for interface cfg files
  file: path=/etc/network/interfaces.d  state=directory
  when: ansible_os_family == "Debian"
  become: yes

- name: Create the network configuration file for ethernet devices
  template: src=ethernet_{{ ansible_os_family }}.j2 dest={{ net_path }}/ifcfg-{{ item.device }}
  with_items: network_ether_interfaces
  when: network_ether_interfaces is defined
  register: ether_result
  become: yes

- name: Write configuration files for rhel route configuration
  template: src=route_{{ ansible_os_family }}.j2 dest={{ net_path }}/route-{{ item.device }} 
  with_items: network_ether_interfaces
  when: network_ether_interfaces is defined and item.route is defined and ansible_os_family == 'RedHat'
  become: yes

- shell: /usr/sbin/ifdown {{ item.item.device }}; /usr/sbin/ifup {{ item.item.device }}
  with_items: ether_result.results
  when: ether_result is defined and item.changed
  become: yes

- name: Create the network configuration file for bridge devices
  template: src=bridge_{{ ansible_os_family }}.j2 dest={{ net_path }}/ifcfg-{{ item.device }}
  with_items: network_bridge_interfaces
  when: network_bridge_interfaces is defined 
  register: bridge_result

- name: Write configuration files for rhel route configuration
  template: src=route_{{ ansible_os_family }}.j2 dest={{ net_path }}/route-{{ item.device }} 
  with_items: network_bridge_interfaces
  when: network_bridge_interfaces is defined and item.route is defined and ansible_os_family == 'RedHat'
  become: yes

- shell: /usr/sbin/ifdown {{ item.item.device }}; /usr/sbin/ifup {{ item.item.device }}
  with_items: bridge_result.results
  when: bridge_result is defined and item.changed
  become: yes
 
- name: Create the network configuration file for port on the bridge devices
  template: src=bridge_port_{{ ansible_os_family }}.j2 dest={{ net_path }}/ifcfg-{{ item.1 }}
  with_subelements: 
   - network_bridge_interfaces
   - ports
  when: network_bridge_interfaces is defined 
  register: bridge_port_result
  become: yes

- shell: /usr/sbin/ifdown {{ item.item.1 }}; /usr/sbin/ifup {{ item.item.1 }}
  with_items: bridge_port_result.results
  when: bridge_port_result is defined and item.changed
  become: yes

- name: Create the network configuration file for bond devices
  template: src=bond_{{ ansible_os_family }}.j2 dest={{ net_path }}/ifcfg-{{ item.device }}
  with_items: network_bond_interfaces
  when: network_bond_interfaces is defined
  register: bond_result

- name: Make sure the bonding module is loaded
  modprobe: name=bonding state=present
  when: bond_result|changed

- name: Write configuration files for route configuration
  template: src=route_{{ ansible_os_family }}.j2 dest={{ net_path }}/route-{{ item.device }} 
  with_items: network_bond_interfaces
  when: network_bond_interfaces is defined and item.route is defined and ansible_os_family == 'RedHat'
  become: yes

- shell: /usr/sbin/ifdown {{ item.item.device }}; /usr/sbin/ifup {{ item.item.device }}
  with_items: bond_result.results
  when: bond_result is defined and item.changed
  become: yes

- name: Create the network configuration file for slave in the bond devices
  template: src=bond_slave_{{ ansible_os_family }}.j2 dest={{ net_path }}/ifcfg-{{ item.1 }}
  with_subelements: 
   - network_bond_interfaces
   - bond_slaves
  when: network_bond_interfaces is defined
  register: bond_port_result

- shell: /usr/sbin/ifdown {{ item.item.1 }}; /usr/sbin/ifup {{ item.item.1 }}
  with_items: bond_port_result.results
  when: bond_port_result is defined and item.changed
  become: yes

- shell: /usr/sbin/ifdown {{ item.item.device }}; /usr/sbin/ifup {{ item.item.device }}
  with_items: bond_result.results
  when: bond_result is defined and item.changed and ansible_os_family == 'RedHat'
  become: yes
